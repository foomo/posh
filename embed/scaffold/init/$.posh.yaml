Version: v1.0

## Prompt settings
prompt:
  title: "Posh"
  prefix: "posh >"
  history:
    limit: 100
    filename: .posh/.history
    lockFilename: .posh/.history.lock

## Environment variables
env:
  - name: PATH
    value: "${PROJECT_ROOT}/bin:${PATH}"
  - name: GOPROXY
    value: "https://proxy.golang.org,direct"

## Plugin settings
plugin:
  source: .posh/plugin.go
  provider: New

## Ownbrew settings
ownbrew:
  binDir: "bin"
  tapDir: ".posh/scripts/ownbrew"
  tempDir: ".posh/tmp"
  cellarDir: ".posh/bin"
  packages: []
    ## Remote package
    ## See `https://github.com/foomo/ownbrew-tap`
    #- name: gotsrpc
    #  tap: foomo/tap/foomo/gotsrpc
    #  version: 2.6.2
    ## Local package `.posh/scripts/ownbrew`
    #- name: example
    #  version: 0.0.0

## Requirement settings
require:
  ## Required environment variables
  envs: []
    ## Example: require GITHUB_TOKEN
    #- name: GITHUB_TOKEN
    #  help: |
    #    You need to export a GITHUB_TOKEN in your environment!
    #
    #    To do so, create an access token on https://github.com/settings/tokens with the following permissions:
    #
    #      - repo
    #      - write:packages
    #      - delete:packages
    #
    #    and export it into your environment e.g. ZSH:
    #
    #      $ vi ~/.zshenv
    #
    #      export GITHUB_TOKEN=XXX

  ## Required scripts that need to succeed
  scripts: []
    ## Example: require
    #- name: npm
    #  command: npm whoami --registry=https://npm.pkg.github.com > /dev/null 2>&1
    #  help: |
    #    You're not yet logged into the github npm registry!
    #
    #      $ npm login --scope=@<SCOPE> --registry=https://npm.pkg.github.com
    #      Username: [GITHUB_USERNAME]
    #      Password: [GITHUB_TOKEN]
    #      Email: [EMAIL]

  ## Required packages to be installed on the host
  packages: []
    ## Example: git
    #- name: git
    #  version: '~2'
    #  command: git version | awk '{print $3}'
    #  help: |
    #    Please ensure you have 'git' installed in the required version: %s!
    #
    #      $ brew update
    #      $ brew install git

    ## Example: go
    #- name: go
    #  version: '>=1.19.4'
    #  command: go env GOVERSION | cut -c3-
    #  help: |
    #    Please ensure you have 'go' installed in the required version: %s!
    #
    #      $ brew update
    #      $ brew install go

    ## Example: onepassword
    #- name: op
    #  version: '~2'
    #  command: op --version
    #  help: |
    #    Please ensure you have the 1Password cli 'op' installed in the required version: %s!
    #
    #      $ brew update
    #      $ brew install 1password-cli

    ## Example: node
    #- name: node
    #  version: '~16'
    #  command: node --version
    #  help: |
    #    Please ensure you have 'node' installed in the required version: %s!
    #
    #    We strongly recommend installing 'nvm' trough:
    #
    #      $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
    #
    #    If you already have installed 'nvm' just run the following command to read in the .nvmrc:
    #
    #      $ nvm use

    ## Example: yarn
    #- name: yarn
    #  version: '~1'
    #  command: yarn --version
    #  help: |
    #    Please ensure you have 'yarn' installed in the required version: %s!
    #
    #      $ npm install -g yarn

    ## Example: teleport
    #- name: tsh
    #  version: '>=10'
    #  command: tsh version --skip-version-check | awk 'NR==1{print $2}'
    #  help: |
    #    Please ensure you have 'teleport' installed in the required version: %s!
    #
    #      $ brew update
    #      $ brew install teleport

    ## Example: goimports
    # - name: goimports
    #   version: '>=2022'
    #   command: date -r $(which goimports) +%Y.%-m.%-d
    #   help: |
    #     Please ensure you have 'goimports' installed in a recent version: %s!
    #
    #       $ go install golang.org/x/tools/cmd/goimports@latest


## Integrations

## Example: 1Password
#onePassword:
#  account: <ACCOUNT>
#  tokenFilename: .posh/config/.op


## Example: Custom
#welcome:
#  message: Hi, thanks for using POSH!
